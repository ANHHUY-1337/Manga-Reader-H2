{"ast":null,"code":"// export default {\n//     get(key, type) {\n//         return JSON.parse(localStorage.getItem(key)) || type\n//     },\n//     set(key, data) {\n//         return localStorage.setItem(key, JSON.stringify(data))\n//     }\n// }\n\n// export function formatDate(isoString) {\n//     const date = new Date(isoString);\n//     return date.toLocaleDateString('vi-VN', { year: 'numeric', month: 'long', day: 'numeric' });\n// }\n\n// export function formatTime(time) {\n//     const currentTime = new Date()\n//     const storageTime = new Date(time)\n//     const diff = Math.floor((currentTime - storageTime) / 1000)\n\n//     if (diff < 60) {\n//         return `Vừa xong`;\n//     } else if (diff < 3600) {\n//         return `${Math.floor(diff / 60)} phút trước`;\n//     } else if (diff < 86400) {\n//         return `${Math.floor(diff / 3600)} giờ trước`;\n//     } else if (diff < 86400 * 30) {\n//         return `${Math.floor(diff / 86400)} ngày trước`;\n//     } else {\n//         const day = storageTime.getDate();\n//         const month = storageTime.getMonth() + 1;\n//         const year = storageTime.getFullYear();\n//         return `${day}/${month}/${year}`;\n//     }\n// }\n\n// // hàm này dùng để điều chỉnh con trỏ phía cuối nội dung\n// export function handleSelectedFocus(ref) {\n//     if (ref) {\n//         ref.focus()\n//         const length = ref.value.length\n//         ref.setSelectionRange(length, length)\n//     }\n// }\n\n// export function scrollToTop() {\n//     window.scrollTo({ top: 0, behavior: 'smooth' })\n// }\n\n// export function scrollToBottom() {\n//     window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\n// }\n\n// export function isUrlWithValidDomainSuffix(url) {\n//     const urlPattern =\n//         /^(http|https):\\/\\/[^\\/]*\\.(com|vn|org|net|edu|gov|mil|app|shop|blog|tech|online|io|co|ai|xyz)(\\/.*)?$/i;\n//     return urlPattern.test(url)\n// }\n\n// export function setScrollDocument(isShow) {\n//     isShow ?\n//         document.body.style.overflowY = 'hidden' :\n//         document.body.style.overflowY = 'auto'\n// }\n\n// export function setScrollAuto() {\n//     document.body.style.overflow = 'auto'\n// }\n\n// export function setScrollHidden() {\n//     document.body.style.overflow = 'hidden'\n// }\n\n// export function handleSetActivity(user, data, type) {\n//     const recentActivity = JSON.parse(localStorage.getItem('recent-activity')) || {}\n//     let newData = ''\n\n//     switch (type) {\n//         case 'addComic': {\n//             newData = `Thêm truyện ${data?.data?.item?.name} vào kho lưu trữ`\n//             break\n//         }\n//         case 'removeComic': {\n//             newData = `Xoá truyện ${data?.data?.item?.name} khỏi kho lưu trữ`\n//             break\n//         }\n//         case 'readComic': {\n//             newData = `Đọc truyện ${data?.data?.item?.comic_name} - Chương ${data?.data?.item?.chapter_name}`\n//             break\n//         }\n//         case 'search': {\n//             newData = `Tìm kiếm từ khoá \"${data}\"`\n//             break\n//         }\n//         case 'archive': {\n//             newData = 'Xoá tất cả truyện khỏi kho lưu trữ'\n//             break\n//         }\n//         case 'history': {\n//             newData = 'Xoá lịch sử đọc truyện'\n//             break\n//         }\n//         case 'changeAvartar': {\n//             newData = 'Thay đổi ảnh đại diện'\n//             break\n//         }\n//         case 'changeBackground': {\n//             newData = 'Thay đổi ảnh bìa'\n//             break\n//         }\n//         case 'addComment': {\n//             const { dataChapter, valueComment } = data\n//             const comicName = dataChapter?.data?.item?.comic_name\n//             const chapterName = dataChapter?.data?.item?.chapter_name\n\n//             newData = `Bình luận \"${valueComment}\" tại truyện ${comicName} - Chương ${chapterName}`\n//             break\n//         }\n//         case 'removeComment': {\n//             const { dataChapter, valueComment } = data\n//             const comicName = dataChapter?.data?.item?.comic_name\n//             const chapterName = dataChapter?.data?.item?.chapter_name\n\n//             newData = `Xoá bình luận \"${valueComment}\" tại truyện ${comicName} - Chương ${chapterName}`\n//             break\n//         }\n//         case 'editComment': {\n//             const { dataChapter, valueComment, valueEditComment } = data\n//             const comicName = dataChapter?.data?.item?.comic_name\n//             const chapterName = dataChapter?.data?.item?.chapter_name\n\n//             newData = `Sửa bình luận \"${valueComment}\" thành \"${valueEditComment}\" tại truyện ${comicName} - Chương ${chapterName}`\n//             break\n//         }\n//         case 'deleteChapter': {\n//             const { historyStorage, slug, index } = data\n//             const chapterName = historyStorage[user?.email][slug][index]?.data?.item?.chapter_name\n//             const comicName = historyStorage[user?.email][slug][index]?.data?.item?.comic_name\n\n//             newData = `Xoá chương ${chapterName} truyện ${comicName} khỏi lịch sử đã xem`\n//             break\n//         }\n//         default: {\n//             console.log('Không có type phù hợp!');\n//         }\n//     }\n\n//     const newActivity = {\n//         value: newData,\n//         time: new Date()\n//     }\n\n//     if (!recentActivity[user?.email]) {\n//         recentActivity[user?.email] = []\n//     }\n\n//     recentActivity[user?.email] = [\n//         ...recentActivity[user?.email], newActivity\n//     ]\n\n//     localStorage.setItem('recent-activity', JSON.stringify(recentActivity))\n// }","map":{"version":3,"names":[],"sources":["C:/Users/hoala/OneDrive/Desktop/2025/cncmanga/cncmanga/src/utils/index.js"],"sourcesContent":["// export default {\r\n//     get(key, type) {\r\n//         return JSON.parse(localStorage.getItem(key)) || type\r\n//     },\r\n//     set(key, data) {\r\n//         return localStorage.setItem(key, JSON.stringify(data))\r\n//     }\r\n// }\r\n\r\n// export function formatDate(isoString) {\r\n//     const date = new Date(isoString);\r\n//     return date.toLocaleDateString('vi-VN', { year: 'numeric', month: 'long', day: 'numeric' });\r\n// }\r\n\r\n// export function formatTime(time) {\r\n//     const currentTime = new Date()\r\n//     const storageTime = new Date(time)\r\n//     const diff = Math.floor((currentTime - storageTime) / 1000)\r\n\r\n//     if (diff < 60) {\r\n//         return `Vừa xong`;\r\n//     } else if (diff < 3600) {\r\n//         return `${Math.floor(diff / 60)} phút trước`;\r\n//     } else if (diff < 86400) {\r\n//         return `${Math.floor(diff / 3600)} giờ trước`;\r\n//     } else if (diff < 86400 * 30) {\r\n//         return `${Math.floor(diff / 86400)} ngày trước`;\r\n//     } else {\r\n//         const day = storageTime.getDate();\r\n//         const month = storageTime.getMonth() + 1;\r\n//         const year = storageTime.getFullYear();\r\n//         return `${day}/${month}/${year}`;\r\n//     }\r\n// }\r\n\r\n// // hàm này dùng để điều chỉnh con trỏ phía cuối nội dung\r\n// export function handleSelectedFocus(ref) {\r\n//     if (ref) {\r\n//         ref.focus()\r\n//         const length = ref.value.length\r\n//         ref.setSelectionRange(length, length)\r\n//     }\r\n// }\r\n\r\n// export function scrollToTop() {\r\n//     window.scrollTo({ top: 0, behavior: 'smooth' })\r\n// }\r\n\r\n// export function scrollToBottom() {\r\n//     window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n// }\r\n\r\n\r\n// export function isUrlWithValidDomainSuffix(url) {\r\n//     const urlPattern =\r\n//         /^(http|https):\\/\\/[^\\/]*\\.(com|vn|org|net|edu|gov|mil|app|shop|blog|tech|online|io|co|ai|xyz)(\\/.*)?$/i;\r\n//     return urlPattern.test(url)\r\n// }\r\n\r\n// export function setScrollDocument(isShow) {\r\n//     isShow ?\r\n//         document.body.style.overflowY = 'hidden' :\r\n//         document.body.style.overflowY = 'auto'\r\n// }\r\n\r\n// export function setScrollAuto() {\r\n//     document.body.style.overflow = 'auto'\r\n// }\r\n\r\n// export function setScrollHidden() {\r\n//     document.body.style.overflow = 'hidden'\r\n// }\r\n\r\n// export function handleSetActivity(user, data, type) {\r\n//     const recentActivity = JSON.parse(localStorage.getItem('recent-activity')) || {}\r\n//     let newData = ''\r\n\r\n//     switch (type) {\r\n//         case 'addComic': {\r\n//             newData = `Thêm truyện ${data?.data?.item?.name} vào kho lưu trữ`\r\n//             break\r\n//         }\r\n//         case 'removeComic': {\r\n//             newData = `Xoá truyện ${data?.data?.item?.name} khỏi kho lưu trữ`\r\n//             break\r\n//         }\r\n//         case 'readComic': {\r\n//             newData = `Đọc truyện ${data?.data?.item?.comic_name} - Chương ${data?.data?.item?.chapter_name}`\r\n//             break\r\n//         }\r\n//         case 'search': {\r\n//             newData = `Tìm kiếm từ khoá \"${data}\"`\r\n//             break\r\n//         }\r\n//         case 'archive': {\r\n//             newData = 'Xoá tất cả truyện khỏi kho lưu trữ'\r\n//             break\r\n//         }\r\n//         case 'history': {\r\n//             newData = 'Xoá lịch sử đọc truyện'\r\n//             break\r\n//         }\r\n//         case 'changeAvartar': {\r\n//             newData = 'Thay đổi ảnh đại diện'\r\n//             break\r\n//         }\r\n//         case 'changeBackground': {\r\n//             newData = 'Thay đổi ảnh bìa'\r\n//             break\r\n//         }\r\n//         case 'addComment': {\r\n//             const { dataChapter, valueComment } = data\r\n//             const comicName = dataChapter?.data?.item?.comic_name\r\n//             const chapterName = dataChapter?.data?.item?.chapter_name\r\n\r\n//             newData = `Bình luận \"${valueComment}\" tại truyện ${comicName} - Chương ${chapterName}`\r\n//             break\r\n//         }\r\n//         case 'removeComment': {\r\n//             const { dataChapter, valueComment } = data\r\n//             const comicName = dataChapter?.data?.item?.comic_name\r\n//             const chapterName = dataChapter?.data?.item?.chapter_name\r\n\r\n//             newData = `Xoá bình luận \"${valueComment}\" tại truyện ${comicName} - Chương ${chapterName}`\r\n//             break\r\n//         }\r\n//         case 'editComment': {\r\n//             const { dataChapter, valueComment, valueEditComment } = data\r\n//             const comicName = dataChapter?.data?.item?.comic_name\r\n//             const chapterName = dataChapter?.data?.item?.chapter_name\r\n\r\n//             newData = `Sửa bình luận \"${valueComment}\" thành \"${valueEditComment}\" tại truyện ${comicName} - Chương ${chapterName}`\r\n//             break\r\n//         }\r\n//         case 'deleteChapter': {\r\n//             const { historyStorage, slug, index } = data\r\n//             const chapterName = historyStorage[user?.email][slug][index]?.data?.item?.chapter_name\r\n//             const comicName = historyStorage[user?.email][slug][index]?.data?.item?.comic_name\r\n\r\n//             newData = `Xoá chương ${chapterName} truyện ${comicName} khỏi lịch sử đã xem`\r\n//             break\r\n//         }\r\n//         default: {\r\n//             console.log('Không có type phù hợp!');\r\n//         }\r\n//     }\r\n\r\n//     const newActivity = {\r\n//         value: newData,\r\n//         time: new Date()\r\n//     }\r\n\r\n//     if (!recentActivity[user?.email]) {\r\n//         recentActivity[user?.email] = []\r\n//     }\r\n\r\n//     recentActivity[user?.email] = [\r\n//         ...recentActivity[user?.email], newActivity\r\n//     ]\r\n\r\n//     localStorage.setItem('recent-activity', JSON.stringify(recentActivity))\r\n// }\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}