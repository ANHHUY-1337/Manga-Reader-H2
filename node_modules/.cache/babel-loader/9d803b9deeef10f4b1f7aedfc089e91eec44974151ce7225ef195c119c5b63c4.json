{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nfunction useFetch(url) {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState(null);\n  const handleFetchToError = () => {\n    navigate('/notfound');\n    toast.error('Đã xảy ra lỗi khi lấy dữ liệu!');\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        if ((data === null || data === void 0 ? void 0 : data.status) === 'error') {\n          handleFetchToError();\n          return;\n        }\n        setData(data);\n      } catch (error) {\n        console.error(error);\n        handleFetchToError();\n      }\n    };\n    fetchData();\n  }, [url]);\n  return [data];\n}\n_s(useFetch, \"uPjynNJzuLHx1rqFUksKpQ8OSLI=\", false, function () {\n  return [useNavigate];\n});\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","toast","useNavigate","useFetch","url","_s","navigate","data","setData","handleFetchToError","error","fetchData","response","fetch","ok","Error","json","status","console"],"sources":["C:/Users/hoala/OneDrive/Desktop/2025/mangarederh2/mangarederh2/src/hooks/UseFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport toast from 'react-hot-toast'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction useFetch(url) {\r\n    const navigate = useNavigate()\r\n    const [data, setData] = useState(null)\r\n\r\n    const handleFetchToError = () => {\r\n        navigate('/notfound')\r\n        toast.error('Đã xảy ra lỗi khi lấy dữ liệu!')\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(url)\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok')\r\n                }\r\n                const data = await response.json()\r\n                if (data?.status === 'error') {\r\n                    handleFetchToError()\r\n                    return\r\n                }\r\n                setData(data)\r\n            } catch (error) {\r\n                console.error(error)\r\n                handleFetchToError()\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [url])\r\n    return [data]\r\n}\r\n\r\nexport default useFetch\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,QAAQA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC7BH,QAAQ,CAAC,WAAW,CAAC;IACrBL,KAAK,CAACS,KAAK,CAAC,gCAAgC,CAAC;EACjD,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;QACjC,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMR,IAAI,GAAG,MAAMK,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAI,CAAAT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,MAAM,MAAK,OAAO,EAAE;UAC1BR,kBAAkB,CAAC,CAAC;UACpB;QACJ;QACAD,OAAO,CAACD,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZQ,OAAO,CAACR,KAAK,CAACA,KAAK,CAAC;QACpBD,kBAAkB,CAAC,CAAC;MACxB;IACJ,CAAC;IACDE,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EACT,OAAO,CAACG,IAAI,CAAC;AACjB;AAACF,EAAA,CA9BQF,QAAQ;EAAA,QACID,WAAW;AAAA;AA+BhC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}