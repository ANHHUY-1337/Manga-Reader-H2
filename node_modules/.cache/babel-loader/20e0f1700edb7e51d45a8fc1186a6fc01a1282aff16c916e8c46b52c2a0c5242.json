{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import { googleLogout } from \"@react-oauth/google\";\n\n// import storage, { setScrollDocument } from '../utils'\n// import Context from \"./Context\";\n\n// function Provider({ children }) {\n//     const [width, setWidth] = useState(window.innerWidth)\n//     const [isOpenDiaLog, setIsOpenDiaLog] = useState(false)\n//     const [isLogin, setIsLogin] = useState(() => {\n//         const isLogin = storage.get('user', false)\n//         return !!isLogin\n//     })\n//     const [user, setUser] = useState(() => {\n//         return storage.get('user', null)\n//     })\n//     const [theme, setTheme] = useState(() => {\n//         return storage.get('theme', 'light')\n//     })\n//     const [quantityComicArchive, setQuantityComicArchive] = useState(() => {\n//         const comicStorage = storage.get('comic-storage', {})\n//         return comicStorage[user?.email]?.length\n//     })\n//     const [quantityComicHistory, setQuantityComicHistory] = useState(() => {\n//         const historyStorage = storage.get('history-storage', {})\n//         if (!historyStorage[user?.email]) {\n//             historyStorage[user?.email] = {}\n//         }\n//         return Object.keys(historyStorage[user?.email])?.length\n//     })\n\n//     useEffect(() => {\n//         setQuantityComicArchive(() => {\n//             const comicStorage = storage.get('comic-storage', {})\n//             return comicStorage[user?.email]?.length\n//         })\n//         setQuantityComicHistory(() => {\n//             const historyStorage = storage.get('history-storage', {})\n//             if (!historyStorage[user?.email]) {\n//                 historyStorage[user?.email] = {}\n//             }\n//             return Object.keys(historyStorage[user?.email]).length\n//         })\n//     }, [user])\n\n//     useEffect(() => {\n//         const handleReSize = () => {\n//             setWidth(window.innerWidth)\n//         }\n//         window.addEventListener('resize', handleReSize)\n//         return () => document.removeEventListener('resize', handleReSize)\n//     }, [])\n\n//     useEffect(() => {\n//         storage.set('theme', theme)\n//         document.documentElement.classList.remove('light', 'dark')\n//         theme === 'light' ?\n//             document.documentElement.classList.toggle('light') :\n//             document.documentElement.classList.toggle('dark')\n//     }, [theme])\n\n//     useEffect(() => {\n//         setScrollDocument(isOpenDiaLog)\n//     }, [isOpenDiaLog])\n\n//     const handleLogout = () => {\n//         googleLogout()\n//         setUser(null)\n//         setIsLogin(false)\n//         window.location.href = '/'\n//         localStorage.removeItem('user')\n//     }\n\n//     const value = {\n//         isLogin,\n//         user,\n//         width,\n//         theme,\n//         isOpenDiaLog,\n//         quantityComicArchive,\n//         quantityComicHistory,\n//         setUser,\n//         setIsLogin,\n//         handleLogout,\n//         setTheme,\n//         setIsOpenDiaLog,\n//         setQuantityComicArchive,\n//         setQuantityComicHistory\n//     }\n\n//     return (\n//         <Context.Provider value={value}>\n//             {children}\n//         </Context.Provider>\n//     );\n// }\n\n// export default Provider;","map":{"version":3,"names":[],"sources":["C:/Users/hoala/OneDrive/Desktop/2025/cncmanga/cncmanga/src/state/Provider.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { googleLogout } from \"@react-oauth/google\";\r\n\r\n// import storage, { setScrollDocument } from '../utils'\r\n// import Context from \"./Context\";\r\n\r\n// function Provider({ children }) {\r\n//     const [width, setWidth] = useState(window.innerWidth)\r\n//     const [isOpenDiaLog, setIsOpenDiaLog] = useState(false)\r\n//     const [isLogin, setIsLogin] = useState(() => {\r\n//         const isLogin = storage.get('user', false)\r\n//         return !!isLogin\r\n//     })\r\n//     const [user, setUser] = useState(() => {\r\n//         return storage.get('user', null)\r\n//     })\r\n//     const [theme, setTheme] = useState(() => {\r\n//         return storage.get('theme', 'light')\r\n//     })\r\n//     const [quantityComicArchive, setQuantityComicArchive] = useState(() => {\r\n//         const comicStorage = storage.get('comic-storage', {})\r\n//         return comicStorage[user?.email]?.length\r\n//     })\r\n//     const [quantityComicHistory, setQuantityComicHistory] = useState(() => {\r\n//         const historyStorage = storage.get('history-storage', {})\r\n//         if (!historyStorage[user?.email]) {\r\n//             historyStorage[user?.email] = {}\r\n//         }\r\n//         return Object.keys(historyStorage[user?.email])?.length\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         setQuantityComicArchive(() => {\r\n//             const comicStorage = storage.get('comic-storage', {})\r\n//             return comicStorage[user?.email]?.length\r\n//         })\r\n//         setQuantityComicHistory(() => {\r\n//             const historyStorage = storage.get('history-storage', {})\r\n//             if (!historyStorage[user?.email]) {\r\n//                 historyStorage[user?.email] = {}\r\n//             }\r\n//             return Object.keys(historyStorage[user?.email]).length\r\n//         })\r\n//     }, [user])\r\n\r\n//     useEffect(() => {\r\n//         const handleReSize = () => {\r\n//             setWidth(window.innerWidth)\r\n//         }\r\n//         window.addEventListener('resize', handleReSize)\r\n//         return () => document.removeEventListener('resize', handleReSize)\r\n//     }, [])\r\n\r\n//     useEffect(() => {\r\n//         storage.set('theme', theme)\r\n//         document.documentElement.classList.remove('light', 'dark')\r\n//         theme === 'light' ?\r\n//             document.documentElement.classList.toggle('light') :\r\n//             document.documentElement.classList.toggle('dark')\r\n//     }, [theme])\r\n\r\n//     useEffect(() => {\r\n//         setScrollDocument(isOpenDiaLog)\r\n//     }, [isOpenDiaLog])\r\n\r\n//     const handleLogout = () => {\r\n//         googleLogout()\r\n//         setUser(null)\r\n//         setIsLogin(false)\r\n//         window.location.href = '/'\r\n//         localStorage.removeItem('user')\r\n//     }\r\n\r\n//     const value = {\r\n//         isLogin,\r\n//         user,\r\n//         width,\r\n//         theme,\r\n//         isOpenDiaLog,\r\n//         quantityComicArchive,\r\n//         quantityComicHistory,\r\n//         setUser,\r\n//         setIsLogin,\r\n//         handleLogout,\r\n//         setTheme,\r\n//         setIsOpenDiaLog,\r\n//         setQuantityComicArchive,\r\n//         setQuantityComicHistory\r\n//     }\r\n\r\n//     return (\r\n//         <Context.Provider value={value}>\r\n//             {children}\r\n//         </Context.Provider>\r\n//     );\r\n// }\r\n\r\n// export default Provider;"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}