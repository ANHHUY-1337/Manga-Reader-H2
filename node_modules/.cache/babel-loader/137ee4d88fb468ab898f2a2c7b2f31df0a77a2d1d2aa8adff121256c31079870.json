{"ast":null,"code":"// import { useEffect, useRef, useState, useContext, Fragment } from 'react'\n// import toast from 'react-hot-toast'\n// import { Link } from 'react-router-dom';\n\n// import Context from '../../state/Context';\n// import DiaLog from '../components/Dialog';\n// import storage, { handleSelectedFocus, isUrlWithValidDomainSuffix, formatTime, handleSetActivity, setScrollAuto } from '../../utils'\n\n// function Comment({ setIsShowMessage, slug, id, dataChapter }) {\n//     const { setIsOpenDiaLog, isOpenDiaLog, user } = useContext(Context)\n//     const [valueComment, setValueComment] = useState('')\n//     const [valueEditComment, setValueEditComment] = useState('')\n//     const [comments, setComments] = useState(() => {\n//         const commentStorage = storage.get('comments', {})\n//         return commentStorage?.[user?.email]?.[slug]?.[id] || []\n//     })\n//     const [indexDelete, setIndexDelete] = useState(-1)\n//     const [indexEdit, setIndexEdit] = useState(-1)\n//     const wrapperRef = useRef()\n//     const modalRef = useRef()\n//     const commentEditRef = useRef()\n\n//     useEffect(() => {\n//         handleSelectedFocus(commentEditRef.current)\n//     }, [indexEdit])\n\n//     const handleCloseModal = () => {\n//         if (modalRef.current && wrapperRef.current) {\n//             modalRef.current.classList.add('animate-from-rigth-out')\n//             wrapperRef.current.classList.add('animate-fade-out')\n//             setTimeout(() => {\n//                 setIsShowMessage(false)\n//             }, 200)\n//         }\n//     }\n\n//     const handleWrapperClick = (event) => {\n//         if (modalRef.current && !modalRef.current.contains(event.target)) {\n//             handleCloseModal()\n//         }\n//     }\n\n//     const handleAddComment = () => {\n//         if (valueComment !== '') {\n//             const commentStorage = storage.get('comments', {})\n//             const newComment = {\n//                 value: valueComment,\n//                 time: new Date()\n//             }\n\n//             if (!commentStorage[user?.email]) {\n//                 commentStorage[user?.email] = {}\n//             }\n//             if (!commentStorage[user?.email][slug]) {\n//                 commentStorage[user?.email][slug] = {}\n//             }\n//             if (!commentStorage[user?.email][slug][id]) {\n//                 commentStorage[user?.email][slug][id] = []\n//             }\n//             commentStorage[user?.email][slug][id] = [\n//                 ...commentStorage[user?.email][slug][id], newComment\n//             ]\n//             storage.set('comments', commentStorage)\n//             setComments(commentStorage[user?.email][slug][id] || [])\n//             setValueComment('')\n//             toast.success('Thêm bình luận thành công!')\n//             handleSetActivity(user, { dataChapter, valueComment }, 'addComment')\n//         }\n//     }\n\n//     const handleDeleteComment = () => {\n//         const commentStorage = storage.get('comments', {})\n//         const valueComment = commentStorage[user?.email][slug][id][indexDelete]?.value\n//         commentStorage[user?.email][slug][id].splice(indexDelete, 1)\n//         storage.set('comments', commentStorage)\n//         setComments(commentStorage[user?.email][slug][id])\n//         setIndexEdit(-1)\n//         toast.success('Xoá bình luận thành công')\n//         handleSetActivity(user, { dataChapter, valueComment }, 'removeComment')\n//     }\n\n//     const handleEditComment = (index) => {\n//         setIndexEdit(index)\n//         setValueEditComment(comments[index].value)\n//     }\n\n//     const handleSaveEditComment = () => {\n//         const commentStorage = storage.get('comments', {})\n//         const valueComment =\n//             commentStorage[user?.email][slug][id][indexEdit].value\n//         commentStorage[user?.email][slug][id][indexEdit].value = valueEditComment\n//         storage.set('comments', commentStorage)\n//         setComments(commentStorage[user?.email][slug][id])\n//         setIndexEdit(-1)\n//         toast.success('Sửa bình luận thành công')\n//         handleSetActivity(user, { dataChapter, valueComment, valueEditComment }, 'editComment')\n//     }\n\n//     const handleOpenDiaLog = (index) => {\n//         setIndexDelete(index)\n//         setIsOpenDiaLog(true)\n//     }\n\n//     return (\n//         <Fragment>\n//             <div\n//                 ref={wrapperRef}\n//                 className='fixed inset-0 bg-[rgba(0,0,0,0.5)] flex justify-end animate-fade-in z-[9999]'\n//                 onClick={handleWrapperClick}\n//             >\n//                 <div ref={modalRef} className='lg:w-[50%] mobile:w-full bg-[#fff] dark:bg-[#282828] dark:text-[#fff] lg:pl-[32px] lg:pr-[32px] lg:pt-0 lg:pb-[32px] mobile:p-[16px] relative max-h-[100vh] overflow-y-auto overscroll-y-none animate-from-rigth-in'>\n//                     <button\n//                         onClick={handleCloseModal}\n//                         className='fixed top-0 right-0 text-2xl ml-auto p-[16px] duration-300 opacity-[.6] hover:opacity-[1]'\n//                     >\n//                         <i className=\"fa-solid fa-xmark\"></i>\n//                     </button>\n//                     <div className='mt-[64px]'>\n//                         <div className='nt-[24px]'>\n//                             <h4 className='text-2xl font-[600]'>{comments.length} bình luận</h4>\n//                             <p className='my-[8px] text-[#666] text-base dark:text-[#fff]'>Không bình luận tiêu cực, hãy là độc giả văn minh!</p>\n//                         </div>\n//                         <div className='mt-[32px] mb-[64px]'>\n//                             <textarea\n//                                 className='p-[16px] min-h-[160px] w-full mb-[12px] border-2 border-solid border-[#ccc] duration-300 bg-transparent text-base focus:border-[#10b981] outline-none rounded-[8px]'\n//                                 value={valueComment}\n//                                 onChange={e => setValueComment(e.target.value)}\n//                                 placeholder='Nhập nội dung bình luận...'>\n//                             </textarea>\n//                             <button\n//                                 className={`flex ml-auto py-[4px] px-[12px] mobile:px-[8px] rounded-[8px] text-lg transition-all hover:scale-[1.05] text-[#fff] select-none ${valueComment !== '' ? 'bg-[#10b981] pointer-events-auto' : 'bg-[rgba(16,185,129,0.45)] pointer-events-none'}`}\n//                                 onClick={handleAddComment}>Bình luận</button>\n//                         </div>\n//                         <ul className='flex flex-col gap-[32px] h-full'>\n//                             {comments.map((comment, index) => (\n//                                 <li className='flex gap-[16px]' key={index}>\n//                                     <Link\n//                                         onClick={setScrollAuto}\n//                                         to='/user'\n//                                         className='flex-shrink-0 border border-solid border-[#ccc] overflow-hidden rounded-full w-[50px] h-[50px] hover:animate-pulse'>\n//                                         <img\n//                                             src={user?.picture}\n//                                             alt='avartar' />\n//                                     </Link>\n//                                     <div className='w-full h-full p-[12px] rounded-[8px] bg-[#f2f3f5] dark:bg-[rgba(204,204,204,0.2)]'>\n//                                         <div className=''>\n//                                             {index !== indexEdit &&\n//                                                 <Fragment>\n//                                                     <h5 className='text-lg font-[600]'>{user?.name}</h5>\n//                                                     {<p className='text-base break-word'>\n//                                                         {comment?.value.split(' ').map((cmt, index) => (\n//                                                             <Fragment key={index}>{\n//                                                                 !isUrlWithValidDomainSuffix(cmt) ? ` ${cmt} ` : (\n//                                                                     <a\n//                                                                         className='font-[600] text-[#10b981] hover:underline'\n//                                                                         href={cmt}\n//                                                                         target=\"_blank\"\n//                                                                         rel=\"noopener noreferrer\"\n//                                                                     >\n//                                                                         {cmt}\n//                                                                     </a>\n//                                                                 )\n//                                                             }</Fragment>\n//                                                         ))}\n//                                                     </p>}\n//                                                 </Fragment>\n//                                             }\n//                                             {index === indexEdit &&\n//                                                 <textarea\n//                                                     className='lg:p-[16px] mobile:p-[8px] min-h-[160px] w-full mb-[12px] border-2 border-solid border-[#ccc] duration-300 text-base focus:border-[#10b981] outline-none rounded-[8px]  dark:bg-transparent dark:text-[#fff]'\n//                                                     ref={commentEditRef}\n//                                                     value={valueEditComment}\n//                                                     onChange={e => setValueEditComment(e.target.value)}>\n//                                                 </textarea>\n//                                             }\n//                                         </div>\n//                                         <div className='w-full h-[1px] bg-[#ddd] my-[12px]'></div>\n//                                         <div className='flex justify-end items-center gap-[12px]'>\n//                                             {index !== indexEdit &&\n//                                                 <Fragment>\n//                                                     <span\n//                                                         onClick={() => handleOpenDiaLog(index)}\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Xoá</span>\n//                                                     <span className=''> · </span>\n//                                                     <span\n//                                                         onClick={() => handleEditComment(index)}\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Chỉnh sửa</span>\n//                                                     <span className=''> · </span>\n//                                                 </Fragment>\n//                                             }\n//                                             {index === indexEdit &&\n//                                                 <Fragment>\n//                                                     <span\n//                                                         onClick={() => setIndexEdit(-1)}\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Huỷ</span>\n//                                                     <span className=''> · </span>\n//                                                     <span\n//                                                         onClick={handleSaveEditComment}\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Lưu</span>\n//                                                     <span className=''> · </span>\n//                                                 </Fragment>\n//                                             }\n//                                             <span className='text-base text-[#969696] dark:text-[#fff]'>\n//                                                 {formatTime(comment?.time)}\n//                                             </span>\n//                                         </div>\n//                                     </div>\n//                                 </li>\n//                             ))}\n//                         </ul>\n//                     </div>\n//                 </div>\n//             </div>\n//             {isOpenDiaLog &&\n//                 <DiaLog\n//                     onDeleteComment={handleDeleteComment}\n//                     text='Bạn chắc chắn muốn xoá bình luận này?'\n//                 />\n//             }\n//         </Fragment>\n//     );\n// }\n\n// export default Comment;","map":{"version":3,"names":[],"sources":["C:/Users/hoala/OneDrive/Desktop/2025/cncmanga/cncmanga/src/layout/components/Comment.js"],"sourcesContent":["// import { useEffect, useRef, useState, useContext, Fragment } from 'react'\r\n// import toast from 'react-hot-toast'\r\n// import { Link } from 'react-router-dom';\r\n\r\n// import Context from '../../state/Context';\r\n// import DiaLog from '../components/Dialog';\r\n// import storage, { handleSelectedFocus, isUrlWithValidDomainSuffix, formatTime, handleSetActivity, setScrollAuto } from '../../utils'\r\n\r\n// function Comment({ setIsShowMessage, slug, id, dataChapter }) {\r\n//     const { setIsOpenDiaLog, isOpenDiaLog, user } = useContext(Context)\r\n//     const [valueComment, setValueComment] = useState('')\r\n//     const [valueEditComment, setValueEditComment] = useState('')\r\n//     const [comments, setComments] = useState(() => {\r\n//         const commentStorage = storage.get('comments', {})\r\n//         return commentStorage?.[user?.email]?.[slug]?.[id] || []\r\n//     })\r\n//     const [indexDelete, setIndexDelete] = useState(-1)\r\n//     const [indexEdit, setIndexEdit] = useState(-1)\r\n//     const wrapperRef = useRef()\r\n//     const modalRef = useRef()\r\n//     const commentEditRef = useRef()\r\n\r\n//     useEffect(() => {\r\n//         handleSelectedFocus(commentEditRef.current)\r\n//     }, [indexEdit])\r\n\r\n//     const handleCloseModal = () => {\r\n//         if (modalRef.current && wrapperRef.current) {\r\n//             modalRef.current.classList.add('animate-from-rigth-out')\r\n//             wrapperRef.current.classList.add('animate-fade-out')\r\n//             setTimeout(() => {\r\n//                 setIsShowMessage(false)\r\n//             }, 200)\r\n//         }\r\n//     }\r\n\r\n//     const handleWrapperClick = (event) => {\r\n//         if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n//             handleCloseModal()\r\n//         }\r\n//     }\r\n\r\n//     const handleAddComment = () => {\r\n//         if (valueComment !== '') {\r\n//             const commentStorage = storage.get('comments', {})\r\n//             const newComment = {\r\n//                 value: valueComment,\r\n//                 time: new Date()\r\n//             }\r\n\r\n//             if (!commentStorage[user?.email]) {\r\n//                 commentStorage[user?.email] = {}\r\n//             }\r\n//             if (!commentStorage[user?.email][slug]) {\r\n//                 commentStorage[user?.email][slug] = {}\r\n//             }\r\n//             if (!commentStorage[user?.email][slug][id]) {\r\n//                 commentStorage[user?.email][slug][id] = []\r\n//             }\r\n//             commentStorage[user?.email][slug][id] = [\r\n//                 ...commentStorage[user?.email][slug][id], newComment\r\n//             ]\r\n//             storage.set('comments', commentStorage)\r\n//             setComments(commentStorage[user?.email][slug][id] || [])\r\n//             setValueComment('')\r\n//             toast.success('Thêm bình luận thành công!')\r\n//             handleSetActivity(user, { dataChapter, valueComment }, 'addComment')\r\n//         }\r\n//     }\r\n\r\n//     const handleDeleteComment = () => {\r\n//         const commentStorage = storage.get('comments', {})\r\n//         const valueComment = commentStorage[user?.email][slug][id][indexDelete]?.value\r\n//         commentStorage[user?.email][slug][id].splice(indexDelete, 1)\r\n//         storage.set('comments', commentStorage)\r\n//         setComments(commentStorage[user?.email][slug][id])\r\n//         setIndexEdit(-1)\r\n//         toast.success('Xoá bình luận thành công')\r\n//         handleSetActivity(user, { dataChapter, valueComment }, 'removeComment')\r\n//     }\r\n\r\n//     const handleEditComment = (index) => {\r\n//         setIndexEdit(index)\r\n//         setValueEditComment(comments[index].value)\r\n//     }\r\n\r\n//     const handleSaveEditComment = () => {\r\n//         const commentStorage = storage.get('comments', {})\r\n//         const valueComment =\r\n//             commentStorage[user?.email][slug][id][indexEdit].value\r\n//         commentStorage[user?.email][slug][id][indexEdit].value = valueEditComment\r\n//         storage.set('comments', commentStorage)\r\n//         setComments(commentStorage[user?.email][slug][id])\r\n//         setIndexEdit(-1)\r\n//         toast.success('Sửa bình luận thành công')\r\n//         handleSetActivity(user, { dataChapter, valueComment, valueEditComment }, 'editComment')\r\n//     }\r\n\r\n//     const handleOpenDiaLog = (index) => {\r\n//         setIndexDelete(index)\r\n//         setIsOpenDiaLog(true)\r\n//     }\r\n\r\n//     return (\r\n//         <Fragment>\r\n//             <div\r\n//                 ref={wrapperRef}\r\n//                 className='fixed inset-0 bg-[rgba(0,0,0,0.5)] flex justify-end animate-fade-in z-[9999]'\r\n//                 onClick={handleWrapperClick}\r\n//             >\r\n//                 <div ref={modalRef} className='lg:w-[50%] mobile:w-full bg-[#fff] dark:bg-[#282828] dark:text-[#fff] lg:pl-[32px] lg:pr-[32px] lg:pt-0 lg:pb-[32px] mobile:p-[16px] relative max-h-[100vh] overflow-y-auto overscroll-y-none animate-from-rigth-in'>\r\n//                     <button\r\n//                         onClick={handleCloseModal}\r\n//                         className='fixed top-0 right-0 text-2xl ml-auto p-[16px] duration-300 opacity-[.6] hover:opacity-[1]'\r\n//                     >\r\n//                         <i className=\"fa-solid fa-xmark\"></i>\r\n//                     </button>\r\n//                     <div className='mt-[64px]'>\r\n//                         <div className='nt-[24px]'>\r\n//                             <h4 className='text-2xl font-[600]'>{comments.length} bình luận</h4>\r\n//                             <p className='my-[8px] text-[#666] text-base dark:text-[#fff]'>Không bình luận tiêu cực, hãy là độc giả văn minh!</p>\r\n//                         </div>\r\n//                         <div className='mt-[32px] mb-[64px]'>\r\n//                             <textarea\r\n//                                 className='p-[16px] min-h-[160px] w-full mb-[12px] border-2 border-solid border-[#ccc] duration-300 bg-transparent text-base focus:border-[#10b981] outline-none rounded-[8px]'\r\n//                                 value={valueComment}\r\n//                                 onChange={e => setValueComment(e.target.value)}\r\n//                                 placeholder='Nhập nội dung bình luận...'>\r\n//                             </textarea>\r\n//                             <button\r\n//                                 className={`flex ml-auto py-[4px] px-[12px] mobile:px-[8px] rounded-[8px] text-lg transition-all hover:scale-[1.05] text-[#fff] select-none ${valueComment !== '' ? 'bg-[#10b981] pointer-events-auto' : 'bg-[rgba(16,185,129,0.45)] pointer-events-none'}`}\r\n//                                 onClick={handleAddComment}>Bình luận</button>\r\n//                         </div>\r\n//                         <ul className='flex flex-col gap-[32px] h-full'>\r\n//                             {comments.map((comment, index) => (\r\n//                                 <li className='flex gap-[16px]' key={index}>\r\n//                                     <Link\r\n//                                         onClick={setScrollAuto}\r\n//                                         to='/user'\r\n//                                         className='flex-shrink-0 border border-solid border-[#ccc] overflow-hidden rounded-full w-[50px] h-[50px] hover:animate-pulse'>\r\n//                                         <img\r\n//                                             src={user?.picture}\r\n//                                             alt='avartar' />\r\n//                                     </Link>\r\n//                                     <div className='w-full h-full p-[12px] rounded-[8px] bg-[#f2f3f5] dark:bg-[rgba(204,204,204,0.2)]'>\r\n//                                         <div className=''>\r\n//                                             {index !== indexEdit &&\r\n//                                                 <Fragment>\r\n//                                                     <h5 className='text-lg font-[600]'>{user?.name}</h5>\r\n//                                                     {<p className='text-base break-word'>\r\n//                                                         {comment?.value.split(' ').map((cmt, index) => (\r\n//                                                             <Fragment key={index}>{\r\n//                                                                 !isUrlWithValidDomainSuffix(cmt) ? ` ${cmt} ` : (\r\n//                                                                     <a\r\n//                                                                         className='font-[600] text-[#10b981] hover:underline'\r\n//                                                                         href={cmt}\r\n//                                                                         target=\"_blank\"\r\n//                                                                         rel=\"noopener noreferrer\"\r\n//                                                                     >\r\n//                                                                         {cmt}\r\n//                                                                     </a>\r\n//                                                                 )\r\n//                                                             }</Fragment>\r\n//                                                         ))}\r\n//                                                     </p>}\r\n//                                                 </Fragment>\r\n//                                             }\r\n//                                             {index === indexEdit &&\r\n//                                                 <textarea\r\n//                                                     className='lg:p-[16px] mobile:p-[8px] min-h-[160px] w-full mb-[12px] border-2 border-solid border-[#ccc] duration-300 text-base focus:border-[#10b981] outline-none rounded-[8px]  dark:bg-transparent dark:text-[#fff]'\r\n//                                                     ref={commentEditRef}\r\n//                                                     value={valueEditComment}\r\n//                                                     onChange={e => setValueEditComment(e.target.value)}>\r\n//                                                 </textarea>\r\n//                                             }\r\n//                                         </div>\r\n//                                         <div className='w-full h-[1px] bg-[#ddd] my-[12px]'></div>\r\n//                                         <div className='flex justify-end items-center gap-[12px]'>\r\n//                                             {index !== indexEdit &&\r\n//                                                 <Fragment>\r\n//                                                     <span\r\n//                                                         onClick={() => handleOpenDiaLog(index)}\r\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Xoá</span>\r\n//                                                     <span className=''> · </span>\r\n//                                                     <span\r\n//                                                         onClick={() => handleEditComment(index)}\r\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Chỉnh sửa</span>\r\n//                                                     <span className=''> · </span>\r\n//                                                 </Fragment>\r\n//                                             }\r\n//                                             {index === indexEdit &&\r\n//                                                 <Fragment>\r\n//                                                     <span\r\n//                                                         onClick={() => setIndexEdit(-1)}\r\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Huỷ</span>\r\n//                                                     <span className=''> · </span>\r\n//                                                     <span\r\n//                                                         onClick={handleSaveEditComment}\r\n//                                                         className='text-[#10b981] font-[600] cursor-pointer select-none text-base duration-300 hover:underline'>Lưu</span>\r\n//                                                     <span className=''> · </span>\r\n//                                                 </Fragment>\r\n//                                             }\r\n//                                             <span className='text-base text-[#969696] dark:text-[#fff]'>\r\n//                                                 {formatTime(comment?.time)}\r\n//                                             </span>\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </li>\r\n//                             ))}\r\n//                         </ul>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             {isOpenDiaLog &&\r\n//                 <DiaLog\r\n//                     onDeleteComment={handleDeleteComment}\r\n//                     text='Bạn chắc chắn muốn xoá bình luận này?'\r\n//                 />\r\n//             }\r\n//         </Fragment>\r\n//     );\r\n// }\r\n\r\n// export default Comment;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}